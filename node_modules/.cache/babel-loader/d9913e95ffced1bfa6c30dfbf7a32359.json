{"ast":null,"code":"import _slicedToArray from\"C:/Users/Akash G/Documents/Edyoda/Edyoda_React_Assignment_Projects/ReactJsAdminPanel/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"C:/Users/Akash G/Documents/Edyoda/Edyoda_React_Assignment_Projects/ReactJsAdminPanel/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useEffect}from'react';import styles from'./LatestHits.module.css';import{Line}from'react-chartjs-2';import{Chart as ChartJS,registerables}from'chart.js';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register.apply(ChartJS,_toConsumableArray(registerables));var LatestHits=function LatestHits(_ref){var latestHits=_ref.latestHits,options=_ref.options;//   console.log(Object.keys(latestHits))\n//   let latestHitsCategories\n//   if (latestHits) latestHitsCategories = Object.keys(latestHits)\n//   //   useEffect(() => {\n//   latestHitsCategories = latestHitsCategories.filter(\n//     (latestHitCategory) => latestHitCategory !== 'months'\n//   )\n//   }, [])\n//   const mapCategories = latestHits.map((latestHit) => {\n//     return {\n//       label: latestHitsCategories[2],\n//       data: latestHits[latestHitsCategories[2]],\n//       borderColor: ['rgb(153,103,254)'],\n//       borderWidth: 3,\n//       lineTension: 0.4,\n//     }\n//   })\n//   console.log(Object.entries(latestHits))\nvar borderColorSet={featured:'rgb(153,103,254)',popular:'rgb(254,98,132)',latest:'rgb(74, 193, 192)'};var dashBoardData=function dashBoardData(){var dataset=[];for(var _i=0,_Object$entries=Object.entries(latestHits);_i<_Object$entries.length;_i++){var _Object$entries$_i=_slicedToArray(_Object$entries[_i],2),category=_Object$entries$_i[0],categoryArr=_Object$entries$_i[1];if(category!=='months')dataset.push({label:category==='featured'?category:category+' Hits',data:categoryArr,borderColor:borderColorSet[category],borderWidth:3,lineTension:0.4});}return dataset;};var data={labels:latestHits['months'],datasets:dashBoardData()};//   const options = {\n//     responsive: true,\n//     animations: {\n//       radius: {\n//         duration: 400,\n//         easing: 'linear',\n//         // loop: (context) => context.active,\n//       },\n//     },\n//     plugins: {\n//       tooltip: {\n//         enabled: false,\n//       },\n//       legend: {\n//         labels: {\n//           color: '#ffff', // not 'fontColor:' anymore\n//           // fontSize: 18  // not 'fontSize:' anymore\n//           font: {\n//             size: 12, // 'size' now within object 'font {}'\n//           },\n//         },\n//       },\n//       //   usePointStyle: true,\n//     },\n//     interaction: {\n//       mode: 'nearest',\n//       intersect: false,\n//       axis: 'x',\n//     },\n//     scales: {\n//       y: {\n//         min: 10,\n//         max: 90,\n//         ticks: {\n//           stepSize: 10,\n//           color: '#ffff', // not 'fontColor:' anymore\n//           // fontSize: 18,\n//           font: {\n//             size: 12, // 'size' now within object 'font {}'\n//           },\n//         },\n//         // grid: {\n//         //   display: false,\n//         // },\n//       },\n//       x: {\n//         ticks: {\n//           stepSize: 10,\n//           color: '#ffff', // not 'fontColor:' anymore\n//           // fontSize: 18,\n//           font: {\n//             size: 12, // 'size' now within object 'font {}'\n//           },\n//         },\n//       },\n//       //   x: {\n//       //     grid: {\n//       //       display: false,\n//       //     },\n//       //   },\n//       //   yAxes: [{ gridLines: { display: false } }],\n//     },\n//     stroke: {\n//       curve: 'smooth',\n//     },\n//     legend: {\n//       show: false,\n//     },\n//     elements: {\n//       //   line: {\n//       //     tension: 0, // disables bezier curves\n//       //   },\n//       point: {\n//         radius: 0,\n//       },\n//     },\n//     scaleLineColor: 'transparent',\n//   }\nreturn/*#__PURE__*/_jsxs(\"div\",{className:styles.LatestHitsContainer,children:[/*#__PURE__*/_jsx(\"p\",{className:styles.Title,children:\"Latest Hits\"}),/*#__PURE__*/_jsx(\"div\",{className:styles.LineChartContainer,children:/*#__PURE__*/_jsx(Line,{data:data,options:options})})]});};export default LatestHits;","map":{"version":3,"names":["React","useEffect","styles","Line","Chart","ChartJS","registerables","register","LatestHits","latestHits","options","borderColorSet","featured","popular","latest","dashBoardData","dataset","Object","entries","category","categoryArr","push","label","data","borderColor","borderWidth","lineTension","labels","datasets","LatestHitsContainer","Title","LineChartContainer"],"sources":["C:/Users/Akash G/Documents/Edyoda/Edyoda_React_Assignment_Projects/ReactJsAdminPanel/src/components/DashBoard/LatestHits/LatestHits.js"],"sourcesContent":["import React, { useEffect } from 'react'\r\nimport styles from './LatestHits.module.css'\r\nimport { Line } from 'react-chartjs-2'\r\nimport { Chart as ChartJS, registerables } from 'chart.js'\r\nChartJS.register(...registerables)\r\nconst LatestHits = ({ latestHits, options }) => {\r\n  //   console.log(Object.keys(latestHits))\r\n  //   let latestHitsCategories\r\n\r\n  //   if (latestHits) latestHitsCategories = Object.keys(latestHits)\r\n  //   //   useEffect(() => {\r\n  //   latestHitsCategories = latestHitsCategories.filter(\r\n  //     (latestHitCategory) => latestHitCategory !== 'months'\r\n  //   )\r\n  //   }, [])\r\n  //   const mapCategories = latestHits.map((latestHit) => {\r\n  //     return {\r\n  //       label: latestHitsCategories[2],\r\n  //       data: latestHits[latestHitsCategories[2]],\r\n  //       borderColor: ['rgb(153,103,254)'],\r\n  //       borderWidth: 3,\r\n  //       lineTension: 0.4,\r\n  //     }\r\n  //   })\r\n  //   console.log(Object.entries(latestHits))\r\n  const borderColorSet = {\r\n    featured: 'rgb(153,103,254)',\r\n    popular: 'rgb(254,98,132)',\r\n    latest: 'rgb(74, 193, 192)',\r\n  }\r\n\r\n  const dashBoardData = () => {\r\n    let dataset = []\r\n\r\n    for (let [category, categoryArr] of Object.entries(latestHits)) {\r\n      if (category !== 'months')\r\n        dataset.push({\r\n          label: category === 'featured' ? category : category + ' Hits',\r\n          data: categoryArr,\r\n          borderColor: borderColorSet[category],\r\n          borderWidth: 3,\r\n          lineTension: 0.4,\r\n        })\r\n    }\r\n    return dataset\r\n  }\r\n  const data = {\r\n    labels: latestHits['months'],\r\n    datasets: dashBoardData(),\r\n  }\r\n  //   const options = {\r\n  //     responsive: true,\r\n  //     animations: {\r\n  //       radius: {\r\n  //         duration: 400,\r\n  //         easing: 'linear',\r\n  //         // loop: (context) => context.active,\r\n  //       },\r\n  //     },\r\n\r\n  //     plugins: {\r\n  //       tooltip: {\r\n  //         enabled: false,\r\n  //       },\r\n  //       legend: {\r\n  //         labels: {\r\n  //           color: '#ffff', // not 'fontColor:' anymore\r\n  //           // fontSize: 18  // not 'fontSize:' anymore\r\n  //           font: {\r\n  //             size: 12, // 'size' now within object 'font {}'\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //       //   usePointStyle: true,\r\n  //     },\r\n  //     interaction: {\r\n  //       mode: 'nearest',\r\n  //       intersect: false,\r\n  //       axis: 'x',\r\n  //     },\r\n  //     scales: {\r\n  //       y: {\r\n  //         min: 10,\r\n  //         max: 90,\r\n  //         ticks: {\r\n  //           stepSize: 10,\r\n  //           color: '#ffff', // not 'fontColor:' anymore\r\n  //           // fontSize: 18,\r\n  //           font: {\r\n  //             size: 12, // 'size' now within object 'font {}'\r\n  //           },\r\n  //         },\r\n  //         // grid: {\r\n  //         //   display: false,\r\n  //         // },\r\n  //       },\r\n  //       x: {\r\n  //         ticks: {\r\n  //           stepSize: 10,\r\n  //           color: '#ffff', // not 'fontColor:' anymore\r\n  //           // fontSize: 18,\r\n  //           font: {\r\n  //             size: 12, // 'size' now within object 'font {}'\r\n  //           },\r\n  //         },\r\n  //       },\r\n  //       //   x: {\r\n  //       //     grid: {\r\n  //       //       display: false,\r\n  //       //     },\r\n  //       //   },\r\n  //       //   yAxes: [{ gridLines: { display: false } }],\r\n  //     },\r\n  //     stroke: {\r\n  //       curve: 'smooth',\r\n  //     },\r\n  //     legend: {\r\n  //       show: false,\r\n  //     },\r\n  //     elements: {\r\n  //       //   line: {\r\n  //       //     tension: 0, // disables bezier curves\r\n  //       //   },\r\n  //       point: {\r\n  //         radius: 0,\r\n  //       },\r\n  //     },\r\n  //     scaleLineColor: 'transparent',\r\n  //   }\r\n  return (\r\n    <div className={styles.LatestHitsContainer}>\r\n      <p className={styles.Title}>Latest Hits</p>\r\n      <div className={styles.LineChartContainer}>\r\n        <Line data={data} options={options} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LatestHits\r\n"],"mappings":"4VAAA,MAAOA,MAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,MAAOC,OAAP,KAAmB,yBAAnB,CACA,OAASC,IAAT,KAAqB,iBAArB,CACA,OAASC,KAAK,GAAIC,QAAlB,CAA2BC,aAA3B,KAAgD,UAAhD,C,wFACAD,OAAO,CAACE,QAAR,OAAAF,OAAO,oBAAaC,aAAb,EAAP,CACA,GAAME,WAAU,CAAG,QAAbA,WAAa,MAA6B,IAA1BC,WAA0B,MAA1BA,UAA0B,CAAdC,OAAc,MAAdA,OAAc,CAC9C;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAMC,eAAc,CAAG,CACrBC,QAAQ,CAAE,kBADW,CAErBC,OAAO,CAAE,iBAFY,CAGrBC,MAAM,CAAE,mBAHa,CAAvB,CAMA,GAAMC,cAAa,CAAG,QAAhBA,cAAgB,EAAM,CAC1B,GAAIC,QAAO,CAAG,EAAd,CAEA,6BAAoCC,MAAM,CAACC,OAAP,CAAeT,UAAf,CAApC,gCAAgE,CAA3D,6DAAKU,QAAL,uBAAeC,WAAf,uBACH,GAAID,QAAQ,GAAK,QAAjB,CACEH,OAAO,CAACK,IAAR,CAAa,CACXC,KAAK,CAAEH,QAAQ,GAAK,UAAb,CAA0BA,QAA1B,CAAqCA,QAAQ,CAAG,OAD5C,CAEXI,IAAI,CAAEH,WAFK,CAGXI,WAAW,CAAEb,cAAc,CAACQ,QAAD,CAHhB,CAIXM,WAAW,CAAE,CAJF,CAKXC,WAAW,CAAE,GALF,CAAb,EAOH,CACD,MAAOV,QAAP,CACD,CAdD,CAeA,GAAMO,KAAI,CAAG,CACXI,MAAM,CAAElB,UAAU,CAAC,QAAD,CADP,CAEXmB,QAAQ,CAAEb,aAAa,EAFZ,CAAb,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBACE,aAAK,SAAS,CAAEb,MAAM,CAAC2B,mBAAvB,wBACE,UAAG,SAAS,CAAE3B,MAAM,CAAC4B,KAArB,yBADF,cAEE,YAAK,SAAS,CAAE5B,MAAM,CAAC6B,kBAAvB,uBACE,KAAC,IAAD,EAAM,IAAI,CAAER,IAAZ,CAAkB,OAAO,CAAEb,OAA3B,EADF,EAFF,GADF,CAQD,CApID,CAsIA,cAAeF,WAAf"},"metadata":{},"sourceType":"module"}